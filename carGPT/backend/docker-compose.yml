version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cargpt-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${CARGPT_DB_NAME:-ads_db}
      POSTGRES_USER: ${CARGPT_DB_USER:-adsuser}
      POSTGRES_PASSWORD: ${CARGPT_DB_PASSWORD:-pass}
      POSTGRES_INITDB_ARGS: "--auth-local=trust"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${CARGPT_DB_PORT:-5432}:5432"
    networks:
      - cargpt-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CARGPT_DB_USER:-adsuser} -d ${CARGPT_DB_NAME:-ads_db}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # FastAPI Backend
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: cargpt-backend
    restart: unless-stopped
    environment:
      # Database configuration
      CARGPT_DB_NAME: ${CARGPT_DB_NAME:-ads_db}
      CARGPT_DB_USER: ${CARGPT_DB_USER:-adsuser}
      CARGPT_DB_PASSWORD: ${CARGPT_DB_PASSWORD:-pass}
      CARGPT_DB_HOST: postgres
      CARGPT_DB_PORT: "5432"
      
      # Development settings
      PYTHONPATH: /app
      UVICORN_RELOAD: ${UVICORN_RELOAD:-true}
    ports:
      - "8000:8000"
    volumes:
      # Mount source code for development (hot reload)
      - .:/app
      # Exclude virtual environment and cache directories
      - /app/.venv
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cargpt-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # PgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cargpt-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@cargpt.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin123}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    volumes:
      - pgladmin_data:/var/lib/pgladmin
    depends_on:
      - postgres
    networks:
      - cargpt-network
    profiles:
      - tools # Only start with --profile tools

volumes:
  postgres_data:
    driver: local
  pgladmin_data:
    driver: local

networks:
  cargpt-network:
    driver: bridge
